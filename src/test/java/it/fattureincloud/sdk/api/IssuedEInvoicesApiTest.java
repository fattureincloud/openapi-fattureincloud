/*
 * Fatture in Cloud API v2 - API Reference
 * Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 400.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol.
 *
 * The version of the OpenAPI document: 2.0.14
 * Contact: info@fattureincloud.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package it.fattureincloud.sdk.api;

import it.fattureincloud.sdk.ApiException;
import it.fattureincloud.sdk.model.GetEInvoiceRejectionReasonResponse;
import it.fattureincloud.sdk.model.SendEInvoiceRequest;
import it.fattureincloud.sdk.model.SendEInvoiceResponse;
import it.fattureincloud.sdk.model.VerifyEInvoiceXmlErrorResponse;
import it.fattureincloud.sdk.model.VerifyEInvoiceXmlResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for IssuedEInvoicesApi
 */
@Ignore
public class IssuedEInvoicesApiTest {

    private final IssuedEInvoicesApi api = new IssuedEInvoicesApi();

    
    /**
     * Get e-invoice rejection reason
     *
     * Get e-invoice rejection reason
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getEInvoiceRejectionReasonTest() throws ApiException {
        Integer companyId = null;
        Integer documentId = null;
                GetEInvoiceRejectionReasonResponse response = api.getEInvoiceRejectionReason(companyId, documentId);
        // TODO: test validations
    }
    
    /**
     * Get e-invoice XML
     *
     * Downloads the e-invoice in XML format.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getEInvoiceXmlTest() throws ApiException {
        Integer companyId = null;
        Integer documentId = null;
        Boolean includeAttachment = null;
                String response = api.getEInvoiceXml(companyId, documentId, includeAttachment);
        // TODO: test validations
    }
    
    /**
     * Send the e-invoice
     *
     * Sends the e-invoice to SDI.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void sendEInvoiceTest() throws ApiException {
        Integer companyId = null;
        Integer documentId = null;
        SendEInvoiceRequest sendEInvoiceRequest = null;
                SendEInvoiceResponse response = api.sendEInvoice(companyId, documentId, sendEInvoiceRequest);
        // TODO: test validations
    }
    
    /**
     * Verify e-invoice XML
     *
     * Verifies the e-invoice XML format. Checks if all of the mandatory fields are filled and compliant to the right format.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void verifyEInvoiceXmlTest() throws ApiException {
        Integer companyId = null;
        Integer documentId = null;
                VerifyEInvoiceXmlResponse response = api.verifyEInvoiceXml(companyId, documentId);
        // TODO: test validations
    }
    
}
