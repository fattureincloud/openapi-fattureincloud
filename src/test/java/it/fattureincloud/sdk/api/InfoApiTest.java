/*
 * Fatture in Cloud API v2 - API Reference
 * Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 400.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol.
 *
 * The version of the OpenAPI document: 2.0.14
 * Contact: info@fattureincloud.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package it.fattureincloud.sdk.api;

import it.fattureincloud.sdk.ApiException;
import it.fattureincloud.sdk.model.ListArchiveCategoriesResponse;
import it.fattureincloud.sdk.model.ListCitiesResponse;
import it.fattureincloud.sdk.model.ListCostCentersResponse;
import it.fattureincloud.sdk.model.ListCountriesResponse;
import it.fattureincloud.sdk.model.ListCurrenciesResponse;
import it.fattureincloud.sdk.model.ListDeliveryNotesDefaultCausalsResponse;
import it.fattureincloud.sdk.model.ListDetailedCountriesResponse;
import it.fattureincloud.sdk.model.ListLanguagesResponse;
import it.fattureincloud.sdk.model.ListPaymentAccountsResponse;
import it.fattureincloud.sdk.model.ListPaymentMethodsResponse;
import it.fattureincloud.sdk.model.ListProductCategoriesResponse;
import it.fattureincloud.sdk.model.ListReceivedDocumentCategoriesResponse;
import it.fattureincloud.sdk.model.ListRevenueCentersResponse;
import it.fattureincloud.sdk.model.ListTemplatesResponse;
import it.fattureincloud.sdk.model.ListUnitsOfMeasureResponse;
import it.fattureincloud.sdk.model.ListVatTypesResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for InfoApi
 */
@Ignore
public class InfoApiTest {

    private final InfoApi api = new InfoApi();

    
    /**
     * List Archive Categories
     *
     * Lists the archive categories.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listArchiveCategoriesTest() throws ApiException {
        Integer companyId = null;
                ListArchiveCategoriesResponse response = api.listArchiveCategories(companyId);
        // TODO: test validations
    }
    
    /**
     * List Cities
     *
     * Lists the Italian cities.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listCitiesTest() throws ApiException {
        String postalCode = null;
        String city = null;
                ListCitiesResponse response = api.listCities(postalCode, city);
        // TODO: test validations
    }
    
    /**
     * List Cost Centers
     *
     * Lists the cost centers.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listCostCentersTest() throws ApiException {
        Integer companyId = null;
                ListCostCentersResponse response = api.listCostCenters(companyId);
        // TODO: test validations
    }
    
    /**
     * List Countries
     *
     * Lists the supported countries.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listCountriesTest() throws ApiException {
                ListCountriesResponse response = api.listCountries();
        // TODO: test validations
    }
    
    /**
     * List Currencies
     *
     * Lists the supported currencies.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listCurrenciesTest() throws ApiException {
                ListCurrenciesResponse response = api.listCurrencies();
        // TODO: test validations
    }
    
    /**
     * List Delivery Notes Default Causals
     *
     * Lists the delivery note default causals.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listDeliveryNotesDefaultCausalsTest() throws ApiException {
                ListDeliveryNotesDefaultCausalsResponse response = api.listDeliveryNotesDefaultCausals();
        // TODO: test validations
    }
    
    /**
     * List Detailed Countries
     *
     * Lists the supported countries.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listDetailedCountriesTest() throws ApiException {
                ListDetailedCountriesResponse response = api.listDetailedCountries();
        // TODO: test validations
    }
    
    /**
     * List Languages
     *
     * Lists the supported languages.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listLanguagesTest() throws ApiException {
                ListLanguagesResponse response = api.listLanguages();
        // TODO: test validations
    }
    
    /**
     * List Payment Accounts
     *
     * Lists the available payment accounts.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listPaymentAccountsTest() throws ApiException {
        Integer companyId = null;
        String fields = null;
        String fieldset = null;
        String sort = null;
                ListPaymentAccountsResponse response = api.listPaymentAccounts(companyId, fields, fieldset, sort);
        // TODO: test validations
    }
    
    /**
     * List Payment Methods
     *
     * Lists the available payment methods.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listPaymentMethodsTest() throws ApiException {
        Integer companyId = null;
        String fields = null;
        String fieldset = null;
        String sort = null;
                ListPaymentMethodsResponse response = api.listPaymentMethods(companyId, fields, fieldset, sort);
        // TODO: test validations
    }
    
    /**
     * List Product Categories
     *
     * Lists the product categories.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listProductCategoriesTest() throws ApiException {
        Integer companyId = null;
        String context = null;
                ListProductCategoriesResponse response = api.listProductCategories(companyId, context);
        // TODO: test validations
    }
    
    /**
     * List Received Document Categories
     *
     * Lists the received document categories.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listReceivedDocumentCategoriesTest() throws ApiException {
        Integer companyId = null;
                ListReceivedDocumentCategoriesResponse response = api.listReceivedDocumentCategories(companyId);
        // TODO: test validations
    }
    
    /**
     * List Revenue Centers
     *
     * Lists the revenue centers.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listRevenueCentersTest() throws ApiException {
        Integer companyId = null;
                ListRevenueCentersResponse response = api.listRevenueCenters(companyId);
        // TODO: test validations
    }
    
    /**
     * List Templates
     *
     * Lists the available templates.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listTemplatesTest() throws ApiException {
        String type = null;
        Boolean byType = null;
                ListTemplatesResponse response = api.listTemplates(type, byType);
        // TODO: test validations
    }
    
    /**
     * List Units of Measure
     *
     * Lists the units of measure.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listUnitsOfMeasureTest() throws ApiException {
                ListUnitsOfMeasureResponse response = api.listUnitsOfMeasure();
        // TODO: test validations
    }
    
    /**
     * List Vat Types
     *
     * Lists the available vat types.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listVatTypesTest() throws ApiException {
        Integer companyId = null;
        String fieldset = null;
                ListVatTypesResponse response = api.listVatTypes(companyId, fieldset);
        // TODO: test validations
    }
    
}
