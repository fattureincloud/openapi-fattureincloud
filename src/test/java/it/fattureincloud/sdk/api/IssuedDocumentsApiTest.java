/*
 * Fatture in Cloud API v2 - API Reference
 * Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 400.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol.
 *
 * The version of the OpenAPI document: 2.0.14
 * Contact: info@fattureincloud.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package it.fattureincloud.sdk.api;

import it.fattureincloud.sdk.ApiException;
import it.fattureincloud.sdk.model.CreateIssuedDocumentRequest;
import it.fattureincloud.sdk.model.CreateIssuedDocumentResponse;
import java.io.File;
import it.fattureincloud.sdk.model.GetEmailDataResponse;
import it.fattureincloud.sdk.model.GetExistingIssuedDocumentTotalsRequest;
import it.fattureincloud.sdk.model.GetExistingIssuedDocumentTotalsResponse;
import it.fattureincloud.sdk.model.GetIssuedDocumentPreCreateInfoResponse;
import it.fattureincloud.sdk.model.GetIssuedDocumentResponse;
import it.fattureincloud.sdk.model.GetNewIssuedDocumentTotalsRequest;
import it.fattureincloud.sdk.model.GetNewIssuedDocumentTotalsResponse;
import it.fattureincloud.sdk.model.ListIssuedDocumentsResponse;
import it.fattureincloud.sdk.model.ModifyIssuedDocumentRequest;
import it.fattureincloud.sdk.model.ModifyIssuedDocumentResponse;
import it.fattureincloud.sdk.model.ScheduleEmailRequest;
import it.fattureincloud.sdk.model.UploadIssuedDocumentAttachmentResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for IssuedDocumentsApi
 */
@Ignore
public class IssuedDocumentsApiTest {

    private final IssuedDocumentsApi api = new IssuedDocumentsApi();

    
    /**
     * Create Issued Document
     *
     * Creates a new document.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createIssuedDocumentTest() throws ApiException {
        Integer companyId = null;
        CreateIssuedDocumentRequest createIssuedDocumentRequest = null;
                CreateIssuedDocumentResponse response = api.createIssuedDocument(companyId, createIssuedDocumentRequest);
        // TODO: test validations
    }
    
    /**
     * Delete Issued Document
     *
     * Deletes the specified document.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteIssuedDocumentTest() throws ApiException {
        Integer companyId = null;
        Integer documentId = null;
                api.deleteIssuedDocument(companyId, documentId);
        // TODO: test validations
    }
    
    /**
     * Delete Issued Document Attachment
     *
     * Removes the attachment of the specified document.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteIssuedDocumentAttachmentTest() throws ApiException {
        Integer companyId = null;
        Integer documentId = null;
                api.deleteIssuedDocumentAttachment(companyId, documentId);
        // TODO: test validations
    }
    
    /**
     * Get Email Data
     *
     * Gets the pre-compiled email details.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getEmailDataTest() throws ApiException {
        Integer companyId = null;
        Integer documentId = null;
                GetEmailDataResponse response = api.getEmailData(companyId, documentId);
        // TODO: test validations
    }
    
    /**
     * Get Existing Issued Document Totals
     *
     * Returns the totals for a specified document.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getExistingIssuedDocumentTotalsTest() throws ApiException {
        Integer companyId = null;
        Integer documentId = null;
        GetExistingIssuedDocumentTotalsRequest getExistingIssuedDocumentTotalsRequest = null;
                GetExistingIssuedDocumentTotalsResponse response = api.getExistingIssuedDocumentTotals(companyId, documentId, getExistingIssuedDocumentTotalsRequest);
        // TODO: test validations
    }
    
    /**
     * Get Issued Document
     *
     * Gets the specified document. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getIssuedDocumentTest() throws ApiException {
        Integer companyId = null;
        Integer documentId = null;
        String fields = null;
        String fieldset = null;
                GetIssuedDocumentResponse response = api.getIssuedDocument(companyId, documentId, fields, fieldset);
        // TODO: test validations
    }
    
    /**
     * Get Issued Document Pre-create info
     *
     * Retrieves the information useful while creating a new document.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getIssuedDocumentPreCreateInfoTest() throws ApiException {
        Integer companyId = null;
        String type = null;
                GetIssuedDocumentPreCreateInfoResponse response = api.getIssuedDocumentPreCreateInfo(companyId, type);
        // TODO: test validations
    }
    
    /**
     * Get New Issued Document Totals
     *
     * Returns the totals for a new document.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getNewIssuedDocumentTotalsTest() throws ApiException {
        Integer companyId = null;
        GetNewIssuedDocumentTotalsRequest getNewIssuedDocumentTotalsRequest = null;
                GetNewIssuedDocumentTotalsResponse response = api.getNewIssuedDocumentTotals(companyId, getNewIssuedDocumentTotalsRequest);
        // TODO: test validations
    }
    
    /**
     * List Issued Documents
     *
     * Lists the issued documents.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listIssuedDocumentsTest() throws ApiException {
        Integer companyId = null;
        String type = null;
        String fields = null;
        String fieldset = null;
        String sort = null;
        Integer page = null;
        Integer perPage = null;
        String q = null;
                ListIssuedDocumentsResponse response = api.listIssuedDocuments(companyId, type, fields, fieldset, sort, page, perPage, q);
        // TODO: test validations
    }
    
    /**
     * Modify Issued Document
     *
     * Modifies the specified document.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void modifyIssuedDocumentTest() throws ApiException {
        Integer companyId = null;
        Integer documentId = null;
        ModifyIssuedDocumentRequest modifyIssuedDocumentRequest = null;
                ModifyIssuedDocumentResponse response = api.modifyIssuedDocument(companyId, documentId, modifyIssuedDocumentRequest);
        // TODO: test validations
    }
    
    /**
     * Schedule Email
     *
     * Schedules the sending of a document by email.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void scheduleEmailTest() throws ApiException {
        Integer companyId = null;
        Integer documentId = null;
        ScheduleEmailRequest scheduleEmailRequest = null;
                api.scheduleEmail(companyId, documentId, scheduleEmailRequest);
        // TODO: test validations
    }
    
    /**
     * Upload Issued Document Attachment
     *
     * Uploads an attachment destined to an issued document. The actual association between the document and the attachment must be implemented separately, using the returned token.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void uploadIssuedDocumentAttachmentTest() throws ApiException {
        Integer companyId = null;
        String filename = null;
        File attachment = null;
                UploadIssuedDocumentAttachmentResponse response = api.uploadIssuedDocumentAttachment(companyId, filename, attachment);
        // TODO: test validations
    }
    
}
