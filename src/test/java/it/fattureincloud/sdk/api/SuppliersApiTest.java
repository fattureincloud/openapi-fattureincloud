/*
 * Fatture in Cloud API v2 - API Reference
 * Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 400.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol.
 *
 * The version of the OpenAPI document: 2.0.14
 * Contact: info@fattureincloud.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package it.fattureincloud.sdk.api;

import it.fattureincloud.sdk.ApiException;
import it.fattureincloud.sdk.model.CreateSupplierRequest;
import it.fattureincloud.sdk.model.CreateSupplierResponse;
import it.fattureincloud.sdk.model.GetSupplierResponse;
import it.fattureincloud.sdk.model.ListSuppliersResponse;
import it.fattureincloud.sdk.model.ModifySupplierRequest;
import it.fattureincloud.sdk.model.ModifySupplierResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SuppliersApi
 */
@Ignore
public class SuppliersApiTest {

    private final SuppliersApi api = new SuppliersApi();

    
    /**
     * Create Supplier
     *
     * Creates a new supplier.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createSupplierTest() throws ApiException {
        Integer companyId = null;
        CreateSupplierRequest createSupplierRequest = null;
                CreateSupplierResponse response = api.createSupplier(companyId, createSupplierRequest);
        // TODO: test validations
    }
    
    /**
     * Delete Supplier
     *
     * Deletes the specified supplier.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteSupplierTest() throws ApiException {
        Integer companyId = null;
        Integer supplierId = null;
                api.deleteSupplier(companyId, supplierId);
        // TODO: test validations
    }
    
    /**
     * Get Supplier
     *
     * Gets the specified supplier.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSupplierTest() throws ApiException {
        Integer companyId = null;
        Integer supplierId = null;
        String fields = null;
        String fieldset = null;
                GetSupplierResponse response = api.getSupplier(companyId, supplierId, fields, fieldset);
        // TODO: test validations
    }
    
    /**
     * List Suppliers
     *
     * Lists the suppliers.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listSuppliersTest() throws ApiException {
        Integer companyId = null;
        String fields = null;
        String fieldset = null;
        String sort = null;
        Integer page = null;
        Integer perPage = null;
        String q = null;
                ListSuppliersResponse response = api.listSuppliers(companyId, fields, fieldset, sort, page, perPage, q);
        // TODO: test validations
    }
    
    /**
     * Modify Supplier
     *
     * Modifies the specified supplier.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void modifySupplierTest() throws ApiException {
        Integer companyId = null;
        Integer supplierId = null;
        ModifySupplierRequest modifySupplierRequest = null;
                ModifySupplierResponse response = api.modifySupplier(companyId, supplierId, modifySupplierRequest);
        // TODO: test validations
    }
    
}
