/*
 * Fatture in Cloud API v2 - API Reference
 * Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 400.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol.
 *
 * The version of the OpenAPI document: 2.0.14
 * Contact: info@fattureincloud.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package it.fattureincloud.sdk.api;

import it.fattureincloud.sdk.ApiException;
import it.fattureincloud.sdk.model.CreateClientRequest;
import it.fattureincloud.sdk.model.CreateClientResponse;
import it.fattureincloud.sdk.model.GetClientResponse;
import it.fattureincloud.sdk.model.ListClientsResponse;
import it.fattureincloud.sdk.model.ModifyClientRequest;
import it.fattureincloud.sdk.model.ModifyClientResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ClientsApi
 */
@Ignore
public class ClientsApiTest {

    private final ClientsApi api = new ClientsApi();

    
    /**
     * Create Client
     *
     * Creates a new client.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createClientTest() throws ApiException {
        Integer companyId = null;
        CreateClientRequest createClientRequest = null;
                CreateClientResponse response = api.createClient(companyId, createClientRequest);
        // TODO: test validations
    }
    
    /**
     * Delete Client
     *
     * Deletes the specified client.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteClientTest() throws ApiException {
        Integer companyId = null;
        Integer clientId = null;
                api.deleteClient(companyId, clientId);
        // TODO: test validations
    }
    
    /**
     * Get Client
     *
     * Gets the specified client.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getClientTest() throws ApiException {
        Integer companyId = null;
        Integer clientId = null;
        String fields = null;
        String fieldset = null;
                GetClientResponse response = api.getClient(companyId, clientId, fields, fieldset);
        // TODO: test validations
    }
    
    /**
     * List Clients
     *
     * Lists the clients.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listClientsTest() throws ApiException {
        Integer companyId = null;
        String fields = null;
        String fieldset = null;
        String sort = null;
        Integer page = null;
        Integer perPage = null;
        String q = null;
                ListClientsResponse response = api.listClients(companyId, fields, fieldset, sort, page, perPage, q);
        // TODO: test validations
    }
    
    /**
     * Modify Client
     *
     * Modifies the specified client.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void modifyClientTest() throws ApiException {
        Integer companyId = null;
        Integer clientId = null;
        ModifyClientRequest modifyClientRequest = null;
                ModifyClientResponse response = api.modifyClient(companyId, clientId, modifyClientRequest);
        // TODO: test validations
    }
    
}
