/*
 * Fatture in Cloud API v2 - API Reference
 * Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 400.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol.
 *
 * The version of the OpenAPI document: 2.0.14
 * Contact: info@fattureincloud.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package it.fattureincloud.sdk.api;

import it.fattureincloud.sdk.ApiException;
import it.fattureincloud.sdk.model.CreateReceiptRequest;
import it.fattureincloud.sdk.model.CreateReceiptResponse;
import it.fattureincloud.sdk.model.GetReceiptPreCreateInfoResponse;
import it.fattureincloud.sdk.model.GetReceiptResponse;
import it.fattureincloud.sdk.model.GetReceiptsMonthlyTotalsResponse;
import it.fattureincloud.sdk.model.ListReceiptsResponse;
import it.fattureincloud.sdk.model.ModifyReceiptRequest;
import it.fattureincloud.sdk.model.ModifyReceiptResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ReceiptsApi
 */
@Ignore
public class ReceiptsApiTest {

    private final ReceiptsApi api = new ReceiptsApi();

    
    /**
     * Create Receipt
     *
     * Creates a new receipt.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createReceiptTest() throws ApiException {
        Integer companyId = null;
        CreateReceiptRequest createReceiptRequest = null;
                CreateReceiptResponse response = api.createReceipt(companyId, createReceiptRequest);
        // TODO: test validations
    }
    
    /**
     * Delete Receipt
     *
     * Deletes the specified receipt.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteReceiptTest() throws ApiException {
        Integer companyId = null;
        Integer documentId = null;
                api.deleteReceipt(companyId, documentId);
        // TODO: test validations
    }
    
    /**
     * Get Receipt
     *
     * Gets the specified receipt.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getReceiptTest() throws ApiException {
        Integer companyId = null;
        Integer documentId = null;
        String fields = null;
        String fieldset = null;
                GetReceiptResponse response = api.getReceipt(companyId, documentId, fields, fieldset);
        // TODO: test validations
    }
    
    /**
     * Get Receipt Pre-Create Info
     *
     * Retrieves the information useful while creating a new receipt.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getReceiptPreCreateInfoTest() throws ApiException {
        Integer companyId = null;
                GetReceiptPreCreateInfoResponse response = api.getReceiptPreCreateInfo(companyId);
        // TODO: test validations
    }
    
    /**
     * Get Receipts Monthly Totals
     *
     * Returns the monthly totals by year and receipt type.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getReceiptsMonthlyTotalsTest() throws ApiException {
        Integer companyId = null;
        String type = null;
        String year = null;
                GetReceiptsMonthlyTotalsResponse response = api.getReceiptsMonthlyTotals(companyId, type, year);
        // TODO: test validations
    }
    
    /**
     * List Receipts
     *
     * Lists the receipts.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listReceiptsTest() throws ApiException {
        Integer companyId = null;
        String fields = null;
        String fieldset = null;
        Integer page = null;
        Integer perPage = null;
        String sort = null;
        String q = null;
                ListReceiptsResponse response = api.listReceipts(companyId, fields, fieldset, page, perPage, sort, q);
        // TODO: test validations
    }
    
    /**
     * Modify Receipt
     *
     * Modifies the specified receipt.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void modifyReceiptTest() throws ApiException {
        Integer companyId = null;
        Integer documentId = null;
        ModifyReceiptRequest modifyReceiptRequest = null;
                ModifyReceiptResponse response = api.modifyReceipt(companyId, documentId, modifyReceiptRequest);
        // TODO: test validations
    }
    
}
