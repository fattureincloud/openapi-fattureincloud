/*
 * Fatture in Cloud API v2 - API Reference
 *
 * Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 400.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol.
 *
 * The version of the OpenAPI document: 2.0.3
 * Contact: info@fattureincloud.it
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using It.FattureInCloud.Sdk.Api;
using It.FattureInCloud.Sdk.Model;
using It.FattureInCloud.Sdk.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace It.FattureInCloud.Sdk.Test.Model
{
    /// <summary>
    ///  Class for testing Permissions
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class PermissionsTests : IDisposable
    {
        private Permissions instance;

        public PermissionsTests()
        {
            var body = "{ 'fic_situation': 'write', 'fic_clients': 'write', 'fic_suppliers': 'write', 'fic_products': 'write', 'fic_issued_documents': 'write', 'fic_received_documents': 'write', 'fic_receipts': 'write', 'fic_calendar': 'write', 'fic_archive': 'write', 'fic_taxes': 'write', 'fic_stock': 'write', 'fic_cashbook': 'write', 'fic_settings': 'write', 'fic_emails': 'write', 'dic_employees': 'write', 'dic_timesheet': 'write', 'dic_settings': 'write', 'fic_export': 'write', 'fic_import_bankstatements': 'write', 'fic_import_clients_suppliers': 'write', 'fic_import_issued_documents': 'write', 'fic_import_products': 'write', 'fic_recurring': 'write', 'fic_riba': 'write', 'fic_issued_documents_detailed': { 'quotes': 'write', 'proformas': 'write', 'invoices': 'write', 'receipts': 'write', 'delivery_notes': 'write', 'credit_notes': 'write', 'orders': 'write', 'work_reports': 'write', 'supplier_orders': 'write', 'self_invoices': 'write' } }";
            instance = JsonConvert.DeserializeObject<Permissions>(body);
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Permissions
        /// </summary>
        [Fact]
        public void PermissionsInstanceTest()
        {
            Assert.IsType<Permissions>(instance);
        }


        /// <summary>
        /// Test the property 'FicSituation'
        /// </summary>
        [Fact]
        public void FicSituationTest()
        {
            Assert.IsType<PermissionLevel>(instance.FicSituation);
        }
        /// <summary>
        /// Test the property 'FicClients'
        /// </summary>
        [Fact]
        public void FicClientsTest()
        {
            Assert.IsType<PermissionLevel>(instance.FicClients);
        }
        /// <summary>
        /// Test the property 'FicSuppliers'
        /// </summary>
        [Fact]
        public void FicSuppliersTest()
        {
            Assert.IsType<PermissionLevel>(instance.FicSuppliers);
        }
        /// <summary>
        /// Test the property 'FicProducts'
        /// </summary>
        [Fact]
        public void FicProductsTest()
        {
            Assert.IsType<PermissionLevel>(instance.FicProducts);
        }
        /// <summary>
        /// Test the property 'FicIssuedDocuments'
        /// </summary>
        [Fact]
        public void FicIssuedDocumentsTest()
        {
            Assert.IsType<PermissionLevel>(instance.FicIssuedDocuments);
        }
        /// <summary>
        /// Test the property 'FicReceivedDocuments'
        /// </summary>
        [Fact]
        public void FicReceivedDocumentsTest()
        {
            Assert.IsType<PermissionLevel>(instance.FicReceivedDocuments);
        }
        /// <summary>
        /// Test the property 'FicReceipts'
        /// </summary>
        [Fact]
        public void FicReceiptsTest()
        {
            Assert.IsType<PermissionLevel>(instance.FicReceipts);
        }
        /// <summary>
        /// Test the property 'FicCalendar'
        /// </summary>
        [Fact]
        public void FicCalendarTest()
        {
            Assert.IsType<PermissionLevel>(instance.FicCalendar);
        }
        /// <summary>
        /// Test the property 'FicArchive'
        /// </summary>
        [Fact]
        public void FicArchiveTest()
        {
            Assert.IsType<PermissionLevel>(instance.FicArchive);
        }
        /// <summary>
        /// Test the property 'FicTaxes'
        /// </summary>
        [Fact]
        public void FicTaxesTest()
        {
            Assert.IsType<PermissionLevel>(instance.FicTaxes);
        }
        /// <summary>
        /// Test the property 'FicStock'
        /// </summary>
        [Fact]
        public void FicStockTest()
        {
            Assert.IsType<PermissionLevel>(instance.FicStock);
        }
        /// <summary>
        /// Test the property 'FicCashbook'
        /// </summary>
        [Fact]
        public void FicCashbookTest()
        {
            Assert.IsType<PermissionLevel>(instance.FicCashbook);
        }
        /// <summary>
        /// Test the property 'FicSettings'
        /// </summary>
        [Fact]
        public void FicSettingsTest()
        {
            Assert.IsType<PermissionLevel>(instance.FicSettings);
        }
        /// <summary>
        /// Test the property 'FicEmails'
        /// </summary>
        [Fact]
        public void FicEmailsTest()
        {
            Assert.IsType<PermissionLevel>(instance.FicEmails);
        }
        /// <summary>
        /// Test the property 'FicExport'
        /// </summary>
        [Fact]
        public void FicExportTest()
        {
            Assert.IsType<PermissionLevel>(instance.FicExport);
        }
        /// <summary>
        /// Test the property 'FicImportBankstatements'
        /// </summary>
        [Fact]
        public void FicImportBankstatementsTest()
        {
            Assert.IsType<PermissionLevel>(instance.FicImportBankstatements);
        }
        /// <summary>
        /// Test the property 'FicImportClientsSuppliers'
        /// </summary>
        [Fact]
        public void FicImportClientsSuppliersTest()
        {
            Assert.IsType<PermissionLevel>(instance.FicImportClientsSuppliers);
        }
        /// <summary>
        /// Test the property 'FicImportIssuedDocuments'
        /// </summary>
        [Fact]
        public void FicImportIssuedDocumentsTest()
        {
            Assert.IsType<PermissionLevel>(instance.FicImportIssuedDocuments);
        }
        /// <summary>
        /// Test the property 'FicImportProducts'
        /// </summary>
        [Fact]
        public void FicImportProductsTest()
        {
            Assert.IsType<PermissionLevel>(instance.FicImportProducts);
        }
        /// <summary>
        /// Test the property 'FicRecurring'
        /// </summary>
        [Fact]
        public void FicRecurringTest()
        {
            Assert.IsType<PermissionLevel>(instance.FicRecurring);
        }
        /// <summary>
        /// Test the property 'FicRiba'
        /// </summary>
        [Fact]
        public void FicRibaTest()
        {
            Assert.IsType<PermissionLevel>(instance.FicRiba);
        }
        /// <summary>
        /// Test the property 'DicEmployees'
        /// </summary>
        [Fact]
        public void DicEmployeesTest()
        {
            Assert.IsType<PermissionLevel>(instance.DicEmployees);
        }
        /// <summary>
        /// Test the property 'DicSettings'
        /// </summary>
        [Fact]
        public void DicSettingsTest()
        {
            Assert.IsType<PermissionLevel>(instance.DicSettings);
        }
        /// <summary>
        /// Test the property 'DicTimesheet'
        /// </summary>
        [Fact]
        public void DicTimesheetTest()
        {
            Assert.IsType<PermissionLevel>(instance.DicTimesheet);
        }
        /// <summary>
        /// Test the property 'FicIssuedDocumentsDetailed'
        /// </summary>
        [Fact]
        public void FicIssuedDocumentsDetailedTest()
        {
            Assert.IsType<PermissionsFicIssuedDocumentsDetailed>(instance.FicIssuedDocumentsDetailed);
        }

    }

}
