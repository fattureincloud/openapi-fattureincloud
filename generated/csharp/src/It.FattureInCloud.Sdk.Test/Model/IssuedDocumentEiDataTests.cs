/*
 * Fatture in Cloud API v2 - API Reference
 *
 * Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 400.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol.
 *
 * The version of the OpenAPI document: 2.0.3
 * Contact: info@fattureincloud.it
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using It.FattureInCloud.Sdk.Api;
using It.FattureInCloud.Sdk.Model;
using It.FattureInCloud.Sdk.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace It.FattureInCloud.Sdk.Test.Model
{
    /// <summary>
    ///  Class for testing IssuedDocumentEiData
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class IssuedDocumentEiDataTests : IDisposable
    {
        private IssuedDocumentEiData instance;

        public IssuedDocumentEiDataTests()
        {
            var body = "{ 'vat_kind': 'I', 'od_number': 2, 'od_date': '2020-10-10', 'original_document_type': 'ordine', 'cig': ' ', 'cup': ' ', 'payment_method': ' ', 'bank_name': ' ', 'bank_iban': ' ', 'bank_beneficiary': ' ', 'invoice_number': ' ', 'invoice_date': '2020-12-12' }";
            instance = JsonConvert.DeserializeObject<IssuedDocumentEiData>(body);
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of IssuedDocumentEiData
        /// </summary>
        [Fact]
        public void IssuedDocumentEiDataInstanceTest()
        {
            Assert.IsType<IssuedDocumentEiData>(instance);
        }


        /// <summary>
        /// Test the property 'VatKind'
        /// </summary>
        [Fact]
        public void VatKindTest()
        {
            Assert.IsType<VatKind>(instance.VatKind);
        }
        /// <summary>
        /// Test the property 'OriginalDocumentType'
        /// </summary>
        [Fact]
        public void OriginalDocumentTypeTest()
        {
            Assert.IsType<OriginalDocumentType>(instance.OriginalDocumentType);
        }
        /// <summary>
        /// Test the property 'OdNumber'
        /// </summary>
        [Fact]
        public void OdNumberTest()
        {
            Assert.IsType<string>(instance.OdNumber);
        }
        /// <summary>
        /// Test the property 'OdDate'
        /// </summary>
        [Fact]
        public void OdDateTest()
        {
            Assert.IsType<DateTime>(instance.OdDate);
        }
        /// <summary>
        /// Test the property 'Cig'
        /// </summary>
        [Fact]
        public void CigTest()
        {
            Assert.IsType<string>(instance.Cig);
        }
        /// <summary>
        /// Test the property 'Cup'
        /// </summary>
        [Fact]
        public void CupTest()
        {
            Assert.IsType<string>(instance.Cup);
        }
        /// <summary>
        /// Test the property 'PaymentMethod'
        /// </summary>
        [Fact]
        public void PaymentMethodTest()
        {
            Assert.IsType<string>(instance.PaymentMethod);
        }
        /// <summary>
        /// Test the property 'BankName'
        /// </summary>
        [Fact]
        public void BankNameTest()
        {
            Assert.IsType<string>(instance.BankName);
        }
        /// <summary>
        /// Test the property 'BankIban'
        /// </summary>
        [Fact]
        public void BankIbanTest()
        {
            Assert.IsType<string>(instance.BankIban);
        }
        /// <summary>
        /// Test the property 'BankBeneficiary'
        /// </summary>
        [Fact]
        public void BankBeneficiaryTest()
        {
            Assert.IsType<string>(instance.BankBeneficiary);
        }
        /// <summary>
        /// Test the property 'InvoiceNumber'
        /// </summary>
        [Fact]
        public void InvoiceNumberTest()
        {
            Assert.IsType<string>(instance.InvoiceNumber);
        }
        /// <summary>
        /// Test the property 'InvoiceDate'
        /// </summary>
        [Fact]
        public void InvoiceDateTest()
        {
            Assert.IsType<DateTime>(instance.InvoiceDate);
        }

    }

}
