/*
 * Fatture in Cloud API v2 - API Reference
 *
 * Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 500.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol.
 *
 * The version of the OpenAPI document: 2.0.22
 * Contact: info@fattureincloud.it
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using It.FattureInCloud.Sdk.Api;
using It.FattureInCloud.Sdk.Model;
using It.FattureInCloud.Sdk.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace It.FattureInCloud.Sdk.Test.Model
{
    /// <summary>
    ///  Class for testing Email
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class EmailTests : IDisposable
    {
        private Email instance;

        public EmailTests()
        {
            var body = "{'id':1,'status':'sent','sent_date':'2022-07-17 13:53:12','errors_count':0,'error_log':'','from_email':'test@mail.it','from_name':'Test mail','to_email':'mail@test.it','to_name':'Mario','subject':'Test','content':'Test send email','copy_to':'','recipient_status':'unknown','recipient_date':'2022-07-17 13:53:12','kind':'Fatture','attachments':[]}";
            instance = JsonConvert.DeserializeObject<Email>(body);
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Email
        /// </summary>
        [Fact]
        public void EmailInstanceTest()
        {
            Assert.IsType<Email>(instance);
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            Assert.IsType<int>(instance.Id);
        }
        /// <summary>
        /// Test the property 'Status'
        /// </summary>
        [Fact]
        public void StatusTest()
        {
            Assert.IsType<EmailStatus>(instance.Status);
        }
        /// <summary>
        /// Test the property 'SentDate'
        /// </summary>
        [Fact]
        public void SentDateTest()
        {
            Assert.IsType<string>(instance.SentDate);
        }
        /// <summary>
        /// Test the property 'ErrorsCount'
        /// </summary>
        [Fact]
        public void ErrorsCountTest()
        {
            Assert.IsType<int>(instance.ErrorsCount);
        }
        /// <summary>
        /// Test the property 'ErrorLog'
        /// </summary>
        [Fact]
        public void ErrorLogTest()
        {
            Assert.IsType<string>(instance.ErrorLog);
        }
        /// <summary>
        /// Test the property 'FromEmail'
        /// </summary>
        [Fact]
        public void FromEmailTest()
        {
            Assert.IsType<string>(instance.FromEmail);
        }
        /// <summary>
        /// Test the property 'FromName'
        /// </summary>
        [Fact]
        public void FromNameTest()
        {
            Assert.IsType<string>(instance.FromName);
        }
        /// <summary>
        /// Test the property 'ToEmail'
        /// </summary>
        [Fact]
        public void ToEmailTest()
        {
            Assert.IsType<string>(instance.ToEmail);
        }
        /// <summary>
        /// Test the property 'ToName'
        /// </summary>
        [Fact]
        public void ToNameTest()
        {
            Assert.IsType<string>(instance.ToEmail);
        }
        /// <summary>
        /// Test the property 'Subject'
        /// </summary>
        [Fact]
        public void SubjectTest()
        {
            Assert.IsType<string>(instance.Subject);
        }
        /// <summary>
        /// Test the property 'Content'
        /// </summary>
        [Fact]
        public void ContentTest()
        {
            Assert.IsType<string>(instance.Content);
        }
        /// <summary>
        /// Test the property 'CopyTo'
        /// </summary>
        [Fact]
        public void CopyToTest()
        {
            Assert.IsType<string>(instance.CopyTo);
        }
        /// <summary>
        /// Test the property 'RecipientStatus'
        /// </summary>
        [Fact]
        public void RecipientStatusTest()
        {
            Assert.IsType<EmailRecipientStatus>(instance.RecipientStatus);
        }
        /// <summary>
        /// Test the property 'RecipientDate'
        /// </summary>
        [Fact]
        public void RecipientDateTest()
        {
            Assert.IsType<DateTimeOffset>(instance.RecipientDate);
        }
        /// <summary>
        /// Test the property 'Kind'
        /// </summary>
        [Fact]
        public void KindTest()
        {
            Assert.IsType<string>(instance.Kind);
        }
        /// <summary>
        /// Test the property 'Attachments'
        /// </summary>
        [Fact]
        public void AttachmentsTest()
        {
            Assert.IsType<List<EmailAttachment>>(instance.Attachments);
        }

    }

}
