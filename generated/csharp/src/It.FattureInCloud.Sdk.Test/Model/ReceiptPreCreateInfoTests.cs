/*
 * Fatture in Cloud API v2 - API Reference
 *
 * Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 400.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol.
 *
 * The version of the OpenAPI document: 2.0.3
 * Contact: info@fattureincloud.it
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using It.FattureInCloud.Sdk.Api;
using It.FattureInCloud.Sdk.Model;
using It.FattureInCloud.Sdk.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace It.FattureInCloud.Sdk.Test.Model
{
    /// <summary>
    ///  Class for testing ReceiptPreCreateInfo
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ReceiptPreCreateInfoTests : IDisposable
    {
        private ReceiptPreCreateInfo instance;

        public ReceiptPreCreateInfoTests()
        {
            var body = "{ 'numerations': { '2020': { 'sales_receipt': { 'REC001': 3 } }, '2021': { 'sales_receipt': { 'REC005': 3, 'REC004': 2, 'REC003': 2, 'REC001': 7 } } }, 'numerations_list': [ 'REC001', 'REC002', 'REC003', 'REC005', 'REC006' ], 'rc_centers_list': [ 'Sede generale', 'Negozio Bergamo', 'Negozio Milano' ], 'payment_accounts_list': [ { 'id': 111, 'name': 'Indesa - carta conto' }, { 'id': 222, 'name': 'Contanti' } ], 'categories_list': [ 'altro', 'arredamento' ], 'vat_types_list': [ { 'id': 1334, 'value': 0, 'description': 'Non imp. art. 17 c. 6 DPR 633/72 e s.m.i.', 'is_disabled': false }, { 'id': 1333, 'value': 0, 'description': 'Non sogg. art. 74 c. 7 e 8 DPR 633/72', 'is_disabled': false } ] }";
            instance = JsonConvert.DeserializeObject<ReceiptPreCreateInfo>(body);
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ReceiptPreCreateInfo
        /// </summary>
        [Fact]
        public void ReceiptPreCreateInfoInstanceTest()
        {
            Assert.IsType<ReceiptPreCreateInfo>(instance);
        }


        /// <summary>
        /// Test the property 'Numerations'
        /// </summary>
        [Fact]
        public void NumerationsTest()
        {
            Assert.IsType<Dictionary<string, Dictionary<string, Dictionary<string, int>>>>(instance.Numerations);
        }
        /// <summary>
        /// Test the property 'NumerationsList'
        /// </summary>
        [Fact]
        public void NumerationsListTest()
        {
            Assert.IsType<List<string>>(instance.NumerationsList);
        }
        /// <summary>
        /// Test the property 'RcCentersList'
        /// </summary>
        [Fact]
        public void RcCentersListTest()
        {
            Assert.IsType<List<string>>(instance.RcCentersList);
        }
        /// <summary>
        /// Test the property 'PaymentAccountsList'
        /// </summary>
        [Fact]
        public void PaymentAccountsListTest()
        {
            Assert.IsType<List<PaymentAccount>>(instance.PaymentAccountsList);
        }
        /// <summary>
        /// Test the property 'CategoriesList'
        /// </summary>
        [Fact]
        public void CategoriesListTest()
        {
            Assert.IsType<List<string>>(instance.CategoriesList);
        }
        /// <summary>
        /// Test the property 'VatTypesList'
        /// </summary>
        [Fact]
        public void VatTypesListTest()
        {
            Assert.IsType<List<VatType>>(instance.VatTypesList);
        }

    }

}
