/*
 * Fatture in Cloud API v2 - API Reference
 *
 * Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 400.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol.
 *
 * The version of the OpenAPI document: 2.0.3
 * Contact: info@fattureincloud.it
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using It.FattureInCloud.Sdk.Api;
using It.FattureInCloud.Sdk.Model;
using It.FattureInCloud.Sdk.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace It.FattureInCloud.Sdk.Test.Model
{
    /// <summary>
    ///  Class for testing EmailData
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class EmailDataTests : IDisposable
    {
        private EmailData instance;

        public EmailDataTests()
        {
            var body = "{ 'recipient_email': 'mary.red@example.com', 'cc_email': 'm.rossi@exxample.com', 'subject': 'Nostra pro forma nr. 1', 'body': 'Gentile Mario Rossi,<br>per vedere la nostra pro forma di o per scaricarne una copia in versione PDF prema sul bottone sottoastante.<br><br>{{allegati}}<br><br>Cordiali saluti,<br><b>Mario Rossi</b>', 'document_exists': true, 'delivery_note_exists': false, 'attachment_exists': false, 'accompanying_invoice_exists': false, 'default_attach_pdf': false, 'default_sender_email': { 'id': 0, 'email': 'no-reply@fattureincloud.it' }, 'sender_emails_list': [ { 'id': 0, 'email': 'no-reply@fattureincloud.it' }, { 'id': 888, 'email': 'mariorossi@fattureincloud.it' } ] }";
            instance = JsonConvert.DeserializeObject<EmailData>(body);
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of EmailData
        /// </summary>
        [Fact]
        public void EmailDataInstanceTest()
        {
            Assert.IsType<EmailData>(instance);
        }


        /// <summary>
        /// Test the property 'RecipientEmail'
        /// </summary>
        [Fact]
        public void RecipientEmailTest()
        {
            Assert.IsType<string>(instance.RecipientEmail);
        }
        /// <summary>
        /// Test the property 'DefaultSenderEmail'
        /// </summary>
        [Fact]
        public void DefaultSenderEmailTest()
        {
            Assert.IsType<EmailDataDefaultSenderEmail>(instance.DefaultSenderEmail);
        }
        /// <summary>
        /// Test the property 'SenderEmailsList'
        /// </summary>
        [Fact]
        public void SenderEmailsListTest()
        {
            Assert.IsType<List<SenderEmail>>(instance.SenderEmailsList);
        }
        /// <summary>
        /// Test the property 'CcEmail'
        /// </summary>
        [Fact]
        public void CcEmailTest()
        {
            Assert.IsType<string>(instance.CcEmail);
        }
        /// <summary>
        /// Test the property 'Subject'
        /// </summary>
        [Fact]
        public void SubjectTest()
        {
            Assert.IsType<string>(instance.Subject);
        }
        /// <summary>
        /// Test the property 'Body'
        /// </summary>
        [Fact]
        public void BodyTest()
        {
            Assert.IsType<string>(instance.Body);
        }
        /// <summary>
        /// Test the property 'DocumentExists'
        /// </summary>
        [Fact]
        public void DocumentExistsTest()
        {
            Assert.IsType<bool>(instance.DocumentExists);
        }
        /// <summary>
        /// Test the property 'DeliveryNoteExists'
        /// </summary>
        [Fact]
        public void DeliveryNoteExistsTest()
        {
            Assert.IsType<bool>(instance.DeliveryNoteExists);
        }
        /// <summary>
        /// Test the property 'AttachmentExists'
        /// </summary>
        [Fact]
        public void AttachmentExistsTest()
        {
            Assert.IsType<bool>(instance.AttachmentExists);
        }
        /// <summary>
        /// Test the property 'AccompanyingInvoiceExists'
        /// </summary>
        [Fact]
        public void AccompanyingInvoiceExistsTest()
        {
            Assert.IsType<bool>(instance.AccompanyingInvoiceExists);
        }
        /// <summary>
        /// Test the property 'DefaultAttachPdf'
        /// </summary>
        [Fact]
        public void DefaultAttachPdfTest()
        {
            Assert.IsType<bool>(instance.DefaultAttachPdf);
        }

    }

}
