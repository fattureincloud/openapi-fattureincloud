// <auto-generated>
/*
 * Fatture in Cloud API v2 - API Reference
 *
 * Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 500.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol.
 *
 * The version of the OpenAPI document: 2.1.5
 * Contact: info@fattureincloud.it
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using It.FattureInCloud.Sdk.Client;

namespace It.FattureInCloud.Sdk.Model
{
    /// <summary>
    /// Fatture in Cloud account plan type.
    /// </summary>
    /// <value>Fatture in Cloud account plan type.</value>
    public enum FattureInCloudPlanType
    {
        /// <summary>
        /// Enum Trial for value: trial
        /// </summary>
        Trial = 1,

        /// <summary>
        /// Enum Standard for value: standard
        /// </summary>
        Standard = 2,

        /// <summary>
        /// Enum Premium for value: premium
        /// </summary>
        Premium = 3,

        /// <summary>
        /// Enum PremiumPlus for value: premium_plus
        /// </summary>
        PremiumPlus = 4,

        /// <summary>
        /// Enum Complete for value: complete
        /// </summary>
        Complete = 5
    }

    /// <summary>
    /// Converts <see cref="FattureInCloudPlanType"/> to and from the JSON value
    /// </summary>
    public static class FattureInCloudPlanTypeValueConverter
    {
        /// <summary>
        /// Parses a given value to <see cref="FattureInCloudPlanType"/>
        /// </summary>
        /// <param name="value"></param>
        /// <returns></returns>
        public static FattureInCloudPlanType FromString(string value)
        {
            if (value.Equals("trial"))
                return FattureInCloudPlanType.Trial;

            if (value.Equals("standard"))
                return FattureInCloudPlanType.Standard;

            if (value.Equals("premium"))
                return FattureInCloudPlanType.Premium;

            if (value.Equals("premium_plus"))
                return FattureInCloudPlanType.PremiumPlus;

            if (value.Equals("complete"))
                return FattureInCloudPlanType.Complete;

            throw new NotImplementedException($"Could not convert value to type FattureInCloudPlanType: '{value}'");
        }

        /// <summary>
        /// Parses a given value to <see cref="FattureInCloudPlanType"/>
        /// </summary>
        /// <param name="value"></param>
        /// <returns></returns>
        public static FattureInCloudPlanType? FromStringOrDefault(string value)
        {
            if (value.Equals("trial"))
                return FattureInCloudPlanType.Trial;

            if (value.Equals("standard"))
                return FattureInCloudPlanType.Standard;

            if (value.Equals("premium"))
                return FattureInCloudPlanType.Premium;

            if (value.Equals("premium_plus"))
                return FattureInCloudPlanType.PremiumPlus;

            if (value.Equals("complete"))
                return FattureInCloudPlanType.Complete;

            return null;
        }

        /// <summary>
        /// Converts the <see cref="FattureInCloudPlanType"/> to the json value
        /// </summary>
        /// <param name="value"></param>
        /// <returns></returns>
        /// <exception cref="NotImplementedException"></exception>
        public static string ToJsonValue(FattureInCloudPlanType value)
        {
            if (value == FattureInCloudPlanType.Trial)
                return "trial";

            if (value == FattureInCloudPlanType.Standard)
                return "standard";

            if (value == FattureInCloudPlanType.Premium)
                return "premium";

            if (value == FattureInCloudPlanType.PremiumPlus)
                return "premium_plus";

            if (value == FattureInCloudPlanType.Complete)
                return "complete";

            throw new NotImplementedException($"Value could not be handled: '{value}'");
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="FattureInCloudPlanType"/>
    /// </summary>
    /// <exception cref="NotImplementedException"></exception>
    public class FattureInCloudPlanTypeJsonConverter : JsonConverter<FattureInCloudPlanType>
    {
        /// <summary>
        /// Returns a  from the Json object
        /// </summary>
        /// <param name="reader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="options"></param>
        /// <returns></returns>
        public override FattureInCloudPlanType Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            string? rawValue = reader.GetString();

            FattureInCloudPlanType? result = rawValue == null
                ? null
                : FattureInCloudPlanTypeValueConverter.FromStringOrDefault(rawValue);

            if (result != null)
                return result.Value;

            throw new JsonException();
        }

        /// <summary>
        /// Writes the FattureInCloudPlanType to the json writer
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="fattureInCloudPlanType"></param>
        /// <param name="options"></param>
        public override void Write(Utf8JsonWriter writer, FattureInCloudPlanType fattureInCloudPlanType, JsonSerializerOptions options)
        {
            writer.WriteStringValue(FattureInCloudPlanTypeValueConverter.ToJsonValue(fattureInCloudPlanType).ToString());
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="FattureInCloudPlanType"/>
    /// </summary>
    public class FattureInCloudPlanTypeNullableJsonConverter : JsonConverter<FattureInCloudPlanType?>
    {
        /// <summary>
        /// Returns a FattureInCloudPlanType from the Json object
        /// </summary>
        /// <param name="reader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="options"></param>
        /// <returns></returns>
        public override FattureInCloudPlanType? Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            string? rawValue = reader.GetString();

            FattureInCloudPlanType? result = rawValue == null
                ? null
                : FattureInCloudPlanTypeValueConverter.FromStringOrDefault(rawValue);

            if (result != null)
                return result.Value;

            throw new JsonException();
        }

        /// <summary>
        /// Writes the FattureInCloudPlanType to the json writer
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="fattureInCloudPlanType"></param>
        /// <param name="options"></param>
        public override void Write(Utf8JsonWriter writer, FattureInCloudPlanType? fattureInCloudPlanType, JsonSerializerOptions options)
        {
            writer.WriteStringValue(fattureInCloudPlanType.HasValue ? FattureInCloudPlanTypeValueConverter.ToJsonValue(fattureInCloudPlanType.Value).ToString() : "null");
        }
    }
}
