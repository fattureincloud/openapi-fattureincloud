// <auto-generated>
/*
 * Fatture in Cloud API v2 - API Reference
 *
 * Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 500.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol.
 *
 * The version of the OpenAPI document: 2.1.5
 * Contact: info@fattureincloud.it
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using It.FattureInCloud.Sdk.Client;

namespace It.FattureInCloud.Sdk.Model
{
    /// <summary>
    /// Webhooks Subscription verification method
    /// </summary>
    /// <value>Webhooks Subscription verification method</value>
    public enum WebhooksSubscriptionVerificationMethod
    {
        /// <summary>
        /// Enum Header for value: header
        /// </summary>
        Header = 1,

        /// <summary>
        /// Enum Query for value: query
        /// </summary>
        Query = 2
    }

    /// <summary>
    /// Converts <see cref="WebhooksSubscriptionVerificationMethod"/> to and from the JSON value
    /// </summary>
    public static class WebhooksSubscriptionVerificationMethodValueConverter
    {
        /// <summary>
        /// Parses a given value to <see cref="WebhooksSubscriptionVerificationMethod"/>
        /// </summary>
        /// <param name="value"></param>
        /// <returns></returns>
        public static WebhooksSubscriptionVerificationMethod FromString(string value)
        {
            if (value.Equals("header"))
                return WebhooksSubscriptionVerificationMethod.Header;

            if (value.Equals("query"))
                return WebhooksSubscriptionVerificationMethod.Query;

            throw new NotImplementedException($"Could not convert value to type WebhooksSubscriptionVerificationMethod: '{value}'");
        }

        /// <summary>
        /// Parses a given value to <see cref="WebhooksSubscriptionVerificationMethod"/>
        /// </summary>
        /// <param name="value"></param>
        /// <returns></returns>
        public static WebhooksSubscriptionVerificationMethod? FromStringOrDefault(string value)
        {
            if (value.Equals("header"))
                return WebhooksSubscriptionVerificationMethod.Header;

            if (value.Equals("query"))
                return WebhooksSubscriptionVerificationMethod.Query;

            return null;
        }

        /// <summary>
        /// Converts the <see cref="WebhooksSubscriptionVerificationMethod"/> to the json value
        /// </summary>
        /// <param name="value"></param>
        /// <returns></returns>
        /// <exception cref="NotImplementedException"></exception>
        public static string ToJsonValue(WebhooksSubscriptionVerificationMethod value)
        {
            if (value == WebhooksSubscriptionVerificationMethod.Header)
                return "header";

            if (value == WebhooksSubscriptionVerificationMethod.Query)
                return "query";

            throw new NotImplementedException($"Value could not be handled: '{value}'");
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="WebhooksSubscriptionVerificationMethod"/>
    /// </summary>
    /// <exception cref="NotImplementedException"></exception>
    public class WebhooksSubscriptionVerificationMethodJsonConverter : JsonConverter<WebhooksSubscriptionVerificationMethod>
    {
        /// <summary>
        /// Returns a  from the Json object
        /// </summary>
        /// <param name="reader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="options"></param>
        /// <returns></returns>
        public override WebhooksSubscriptionVerificationMethod Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            string? rawValue = reader.GetString();

            WebhooksSubscriptionVerificationMethod? result = rawValue == null
                ? null
                : WebhooksSubscriptionVerificationMethodValueConverter.FromStringOrDefault(rawValue);

            if (result != null)
                return result.Value;

            throw new JsonException();
        }

        /// <summary>
        /// Writes the WebhooksSubscriptionVerificationMethod to the json writer
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="webhooksSubscriptionVerificationMethod"></param>
        /// <param name="options"></param>
        public override void Write(Utf8JsonWriter writer, WebhooksSubscriptionVerificationMethod webhooksSubscriptionVerificationMethod, JsonSerializerOptions options)
        {
            writer.WriteStringValue(WebhooksSubscriptionVerificationMethodValueConverter.ToJsonValue(webhooksSubscriptionVerificationMethod).ToString());
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="WebhooksSubscriptionVerificationMethod"/>
    /// </summary>
    public class WebhooksSubscriptionVerificationMethodNullableJsonConverter : JsonConverter<WebhooksSubscriptionVerificationMethod?>
    {
        /// <summary>
        /// Returns a WebhooksSubscriptionVerificationMethod from the Json object
        /// </summary>
        /// <param name="reader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="options"></param>
        /// <returns></returns>
        public override WebhooksSubscriptionVerificationMethod? Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            string? rawValue = reader.GetString();

            WebhooksSubscriptionVerificationMethod? result = rawValue == null
                ? null
                : WebhooksSubscriptionVerificationMethodValueConverter.FromStringOrDefault(rawValue);

            if (result != null)
                return result.Value;

            throw new JsonException();
        }

        /// <summary>
        /// Writes the WebhooksSubscriptionVerificationMethod to the json writer
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="webhooksSubscriptionVerificationMethod"></param>
        /// <param name="options"></param>
        public override void Write(Utf8JsonWriter writer, WebhooksSubscriptionVerificationMethod? webhooksSubscriptionVerificationMethod, JsonSerializerOptions options)
        {
            writer.WriteStringValue(webhooksSubscriptionVerificationMethod.HasValue ? WebhooksSubscriptionVerificationMethodValueConverter.ToJsonValue(webhooksSubscriptionVerificationMethod.Value).ToString() : "null");
        }
    }
}
