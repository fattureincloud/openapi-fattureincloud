```python
{{#with apiInfo}}{{#each apis}}{{#unless hasMore}}{{#if hasHttpSignatureMethods}}import datetime{{/if}}{{/unless}}{{/each}}{{/with}}
{{#with apiInfo}}
{{#each apis}}
{{#if @first}}
{{#with operations}}
{{#each operation}}
{{#if @first}}
import {{{packageName}}}
from {{packageName}}.{{apiPackage}}.tags import {{classFilename}}
{{#each imports}}
{{{.}}}
{{/each}}
from pprint import pprint
{{> doc_auth_partial}}
# Enter a context with an instance of the API client
with {{{packageName}}}.ApiClient(configuration) as api_client:
    # Create an instance of the API class
    api_instance = {{classFilename}}.{{{classname}}}(api_client)
{{#if requiredParams}}

    # example passing only required values which don't have defaults set
{{#if pathParams}}
    path_params = {
    {{#each pathParams}}
    {{#if required}}
        '{{baseName}}': {{{example}}},
    {{/if}}
    {{/each}}
    }
{{/if}}
{{#if queryParams}}
    query_params = {
    {{#each queryParams}}
    {{#if required}}
        '{{baseName}}': {{{example}}},
    {{/if}}
    {{/each}}
    }
{{/if}}
{{#if cookieParams}}
    cookie_params = {
    {{#each cookieParams}}
    {{#if required}}
        '{{baseName}}': {{{example}}},
    {{/if}}
    {{/each}}
    }
{{/if}}
{{#if headerParams}}
    header_params = {
    {{#each headerParams}}
    {{#if required}}
        '{{baseName}}': {{{example}}},
    {{/if}}
    {{/each}}
    }
{{/if}}
{{#with bodyParam}}
    {{#if required}}
    body = {{{example}}}
    {{/if}}
{{/with}}
    try:
{{#if summary}}
        # {{{summary}}}
{{/if}}
        api_response = api_instance.{{{operationId}}}(
            {{#if pathParams}}
            path_params=path_params,
            {{/if}}
            {{#if queryParams}}
            query_params=query_params,
            {{/if}}
            {{#if headerParams}}
            header_params=header_params,
            {{/if}}
            {{#if cookieParams}}
            cookie_params=cookie_params,
            {{/if}}
            {{#with bodyParam}}
            {{#if required}}
            body=body,
            {{/if}}
            {{/with}}
        )
{{#if returnType}}
        pprint(api_response)
{{/if}}
    except {{{packageName}}}.ApiException as e:
        print("Exception when calling {{classname}}->{{operationId}}: %s\n" % e)
{{/if}}
{{#if optionalParams}}

    # example passing only optional values
{{#if pathParams}}
    path_params = {
    {{#each pathParams}}
        '{{baseName}}': {{{example}}},
    {{/each}}
    }
{{/if}}
{{#if queryParams}}
    query_params = {
    {{#each queryParams}}
        '{{baseName}}': {{{example}}},
    {{/each}}
    }
{{/if}}
{{#if cookieParams}}
    cookie_params = {
    {{#each cookieParams}}
        '{{baseName}}': {{{example}}},
    {{/each}}
    }
{{/if}}
{{#if headerParams}}
    header_params = {
    {{#each headerParams}}
        '{{baseName}}': {{{example}}},
    {{/each}}
    }
{{/if}}
{{#with bodyParam}}
    body = {{{example}}}
{{/with}}
    try:
{{#if summary}}
        # {{{summary}}}
{{/if}}
        api_response = api_instance.{{{operationId}}}(
            {{#if pathParams}}
            path_params=path_params,
            {{/if}}
            {{#if queryParams}}
            query_params=query_params,
            {{/if}}
            {{#if headerParams}}
            header_params=header_params,
            {{/if}}
            {{#if cookieParams}}
            cookie_params=cookie_params,
            {{/if}}
            {{#if bodyParam}}
            body=body,
            {{/if}}
        )
{{#if returnType}}
        pprint(api_response)
{{/if}}
    except {{{packageName}}}.ApiException as e:
        print("Exception when calling {{classname}}->{{operationId}}: %s\n" % e)
{{/if}}
{{#unless requiredParams}}
{{#unless optionalParams}}

    # example, this endpoint has no required or optional parameters
    try:
{{#if summary}}
        # {{{summary}}}
{{/if}}
        api_response = api_instance.{{{operationId}}}()
{{#if returnType}}
        pprint(api_response)
{{/if}}
    except {{{packageName}}}.ApiException as e:
        print("Exception when calling {{classname}}->{{operationId}}: %s\n" % e)
{{/unless}}
{{/unless}}
{{/if}}
{{/each}}
{{/with}}
{{/if}}
{{/each}}
{{/with}}
```

## Documentation for API Endpoints

All URIs are relative to *{{basePath}}*

Class | Method | HTTP request | Description
------------ | ------------- | ------------- | -------------
{{#with apiInfo}}{{#each apis}}{{#with operations}}{{#each operation}}*{{classname}}* | [**{{operationId}}**]({{apiDocPath}}{{classname}}.md#{{operationId}}) | **{{httpMethod}}** {{path}} | {{#if summary}}{{summary}}{{/if}}
{{/each}}{{/with}}{{/each}}{{/with}}

## Documentation For Models

{{#each models}}{{#with model}} - [{{{classname}}}]({{modelDocPath}}{{{classname}}}.md)
{{/with}}{{/each}}

## Documentation For Authorization

{{#unless authMethods}}
 All endpoints do not require authorization.
{{/unless}}
{{#each authMethods}}
{{#if @last}} Authentication schemes defined for the API:{{/if}}
## {{{name}}}

{{#if isApiKey}}
- **Type**: API key
- **API key parameter name**: {{{keyParamName}}}
- **Location**: {{#if isKeyInQuery}}URL query string{{/if}}{{#if isKeyInHeader}}HTTP header{{/if}}
{{/if}}
{{#if isBasic}}
{{#if isBasicBasic}}
- **Type**: HTTP basic authentication
{{/if}}
{{#if isBasicBearer}}
- **Type**: Bearer authentication{{#if bearerFormat}} ({{{bearerFormat}}}){{/if}}
{{/if}}
{{#if isHttpSignature}}
- **Type**: HTTP signature authentication
{{/if}}
{{/if}}
{{#if isOAuth}}
- **Type**: OAuth
- **Flow**: {{{flow}}}
- **Authorization URL**: {{{authorizationUrl}}}
- **Scopes**: {{#unless scopes}}N/A{{/unless}}
{{#each scopes}} - **{{{scope}}}**: {{{description}}}
{{/each}}
{{/if}}

{{/each}}

## Author

info@fattureincloud.it

## Notes for Large OpenAPI documents
If the OpenAPI document is large, imports in {{{packageName}}}.apis and {{{packageName}}}.models may fail with a
RecursionError indicating the maximum recursion limit has been exceeded. In that case, there are a couple of solutions:

Solution 1:
Use specific imports for apis and models like:
- `from {{{packageName}}}.{{apiPackage}}.default_api import DefaultApi`
- `from {{{packageName}}}.{{modelPackage}}.pet import Pet`

Solution 1:
Before importing the package, adjust the maximum recursion limit as shown below:
```
import sys
sys.setrecursionlimit(1500)
import {{{packageName}}}
from {{{packageName}}}.apis import *
from {{{packageName}}}.models import *
```
