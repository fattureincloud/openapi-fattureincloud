name: Bump and Publish OpenAPI to Readme
on:
  push:
    branches:
      - master
    # paths:
    #   - 'openapi.yaml'
    #   - 'models/**'
jobs:
  filter-trigger:
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.pusher-check.outputs.status }}
    steps:

      - id: retrieve-name
        if: ${{ !env.ACT }}
        name: Retrieve name
        run: |
          echo "Retrieving name..."
          echo "The name of the pusher: ${{ github.event.pusher.name }}"
          echo "The email of the pusher: ${{ github.event.pusher.email }}"
          echo "pusher_name=${{ github.event.pusher.name }}" >> $GITHUB_ENV
        
      - id: retrieve-name-mock
        if: ${{ env.ACT }}
        name: Retrieve name Mock
        run: |
          echo "pusher_name=fake_pusher" >> $GITHUB_ENV
            

      # The filter is executed only on Github Action, otherwise always returns execute
      - id: pusher-check
        name: Check pusher
        env:
          BOT_NAME: fattureincloud-bot
        run: |
          if [ ${{ !env.ACT }} ];
          then
            echo "CHECKING..."
            if [ '${{ env.pusher_name }}' == '${{ env.BOT_NAME }}' ]; 
            then 
              echo "WORKFLOW MUST BE SKIPPED!"
              echo "::set-output name=status::stop"; 
            else 
              echo "EXECUTING..."
              echo "::set-output name=status::execute"; 
            fi
          else
            echo "LOCAL ENV, SKIPPING FILTER..."
            echo "::set-output name=status::execute"; 
          fi

  bump-and-publish:
    runs-on: ubuntu-latest
    if: needs.filter-trigger.outputs.status == 'execute'
    needs: filter-trigger
    outputs:
      version: ${{ steps.bump-version.outputs.version }}
    steps:

      - id: checkout
        name: Checkout repo
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.FATTUREINCLOUD_BOT_TOKEN }}

      - id: init-git
        name: Init GIT
        run: |
          git config --global user.email "info@fattureincloud.it"
          git config --global user.name "fattureincloud-bot"

      - id: setup-node
        name: Setup Node.js
        uses: actions/setup-node@v2

      - id: setup-java
        name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '8'

      - id: setup-libraries
        name: Install libraries
        run: |
          npm install -g yarn
          yarn global add @apidevtools/swagger-cli @openapitools/openapi-generator-cli standard-version
          sudo add-apt-repository ppa:rmescandon/yq -y
          sudo apt update
          sudo apt install yq -y
          cd ./scripts/
          yarn

      - id: validate-spec
        name: Validate specification
        run: |
          swagger-cli validate openapi.yaml
          openapi-generator-cli validate -i ./openapi.yaml

      - id: bump-version
        name: Bump OpenAPI spec version
        run: |
          CURR_VER=$(yq e '.info.version' ./openapi.yaml)
          echo "Previous version: $CURR_VER"
          standard-version
          BUMP_VER=$(yq e '.info.version' ./openapi.yaml)
          echo "New version: $BUMP_VER"
          echo "::set-output name=version::$BUMP_VER";

      - id: version-manager
        name: Run Readme Versions Manager Script
        run: |
          cd ./scripts/
          node readme-api-manager.js ${{ secrets.README_API_KEY }} > res.yaml
          head res.yaml
          VERSION_ID=$(yq e '.version_id' ./res.yaml)
          API_VERSION=$(yq e '.api_version' ./res.yaml)
          echo "api_version=$API_VERSION" >> $GITHUB_ENV
          echo "oas_key=${{ secrets.README_API_KEY }}:$VERSION_ID" >> $GITHUB_ENV
          rm ./res.yaml

      # Executed only if launched locally using ACT
      - id: mock-readme-upload
        name: Mock Upload to Readme.io
        if: ${{ env.ACT }}
        run: |
          echo "This is only a mock of the Update to Readme step. Printing the variables that would be used to upload the spec..."
          echo "${{ env.api_version }}"

      - id: readme-upload
        name: Upload to Readme.io
        uses: readmeio/github-readme-sync@v2
        if: ${{ !env.ACT }}
        with:
          readme-oas-key: "${{ env.oas_key }}"
          oas-file-path: './openapi.yaml'
          api-version: "${{ env.api_version }}"

      - id: check-git
        name: Check GIT
        run: |
          git status
          git --no-pager log -10
          CURR_BRANCH=$(basename "${{ github.ref }}")
          echo "curr_branch=$CURR_BRANCH" >> $GITHUB_ENV


      - id: git-push
        name: Pushing to Git repo
        if: ${{ !env.ACT }}
        run: |
          git push origin
          git push origin --tags

  trigger-generate-workflows:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        event: ['generate-php', 'generate-javascript']
    
    needs: bump-and-publish
    steps: 

      - id: trigger-event
        name: Trigger Event
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.FATTUREINCLOUD_BOT_TOKEN }}
          event-type: ${{ matrix.event }}
          client-payload: '{"version": "${{ needs.bump-and-publish.outputs.version }}"}'
