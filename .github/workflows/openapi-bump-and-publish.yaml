name: Bump and Publish OpenAPI to Readme
on:
  push:
    branches:
      - master
      - test-auto-merge
    # paths:
    #   - 'openapi.yaml'
    #   - 'models/**'
jobs:
  filter-trigger:
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.pusher-check.outputs.status }}
    steps:

      - id: retrieve-name
        if: ${{ !env.ACT }}
        name: Retrieve name
        run: |
          echo "Retrieving name..."
          echo "The name of the pusher: ${{ github.event.pusher.name }}"
          echo "The email of the pusher: ${{ github.event.pusher.email }}"
          echo "pusher_name=${{ github.event.pusher.name }}" >> $GITHUB_ENV
        
      - id: retrieve-name-mock
        if: ${{ env.ACT }}
        name: Retrieve name Mock
        run: |
          echo "pusher_name=fake_pusher" >> $GITHUB_ENV
            

      # The filter is executed only on Github Action, otherwise always returns execute
      - id: pusher-check
        name: Check pusher
        env:
          BOT_NAME: fattureincloud-bot
        run: |
          if [ ${{ !env.ACT }} ];
          then
            echo "CHECKING..."
            if [ '${{ env.pusher_name }}' == '${{ env.BOT_NAME }}' ]; 
            then 
              echo "WORKFLOW MUST BE SKIPPED!"
              echo "::set-output name=status::stop"; 
            else 
              echo "EXECUTING..."
              echo "::set-output name=status::execute"; 
            fi
          else
            echo "LOCAL ENV, SKIPPING FILTER..."
            echo "::set-output name=status::execute"; 
          fi

  bump-and-publish:
    runs-on: ubuntu-latest
    if: needs.filter-trigger.outputs.status == 'execute'
    needs: filter-trigger
    outputs:
      version: ${{ steps.bump-version.outputs.version }}
    steps:

      - id: checkout
        name: Checkout repo
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.FATTUREINCLOUD_BOT_TOKEN }}

      - id: init-git
        name: Init GIT
        run: |
          git config --global user.email "info@fattureincloud.it"
          git config --global user.name "fattureincloud-bot"

      - id: setup-node
        name: Setup Node.js
        uses: actions/setup-node@v2

      - id: setup-java
        name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '8'

      - id: setup-libraries
        name: Install libraries
        run: |
          npm install -g yarn
          yarn global add @apidevtools/swagger-cli @openapitools/openapi-generator-cli standard-version
          sudo add-apt-repository ppa:rmescandon/yq -y
          sudo apt update
          sudo apt install yq -y
          cd ./scripts/
          yarn

      - id: validate-spec
        name: Validate specification
        run: |
          swagger-cli validate openapi.yaml
          openapi-generator-cli validate -i ./openapi.yaml

      - id: bump-version
        name: Bump OpenAPI spec version
        run: |
          CURR_VER=$(yq e '.info.version' ./openapi.yaml)
          echo "Previous version: $CURR_VER"
          standard-version
          BUMP_VER=$(yq e '.info.version' ./openapi.yaml)
          echo "New version: $BUMP_VER"
          echo "::set-output name=version::$BUMP_VER";

      - id: version-manager
        name: Run Readme Versions Manager Script
        run: |
          cd ./scripts/
          node readme-api-manager.js ${{ secrets.README_API_KEY }} > res.yaml
          head res.yaml
          VERSION_ID=$(yq e '.version_id' ./res.yaml)
          API_VERSION=$(yq e '.api_version' ./res.yaml)
          echo "api_version=$API_VERSION" >> $GITHUB_ENV
          echo "oas_key=${{ secrets.README_API_KEY }}:$VERSION_ID" >> $GITHUB_ENV
          rm ./res.yaml

      # Executed only if launched locally using ACT
      - id: mock-readme-upload
        name: Mock Upload to Readme.io
        if: ${{ env.ACT }}
        run: |
          echo "This is only a mock of the Update to Readme step. Printing the variables that would be used to upload the spec..."
          echo "${{ env.api_version }}"

      - id: readme-upload
        name: Upload to Readme.io
        uses: readmeio/github-readme-sync@v2
        if: ${{ !env.ACT }}
        with:
          readme-oas-key: "${{ env.oas_key }}"
          oas-file-path: './openapi.yaml'
          api-version: "${{ env.api_version }}"

      - id: check-git
        name: Check GIT
        run: |
          git status
          git --no-pager log -10
          CURR_BRANCH=$(basename "${{ github.ref }}")
          echo "curr_branch=$CURR_BRANCH" >> $GITHUB_ENV


      - id: git-push
        name: Pushing to Git repo
        if: ${{ !env.ACT }}
        run: |
          git push origin
          git push origin --tags

  generate-php-sdk:
    runs-on: ubuntu-latest
    env:
      GIT_REPO_ID: fattureincloud-php-sdk
      GIT_USER_ID: fattureincloud
    needs: bump-and-publish
    steps: 

      - id: checkout
        name: Checkout repo
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.FATTUREINCLOUD_BOT_TOKEN }}
      
      - id: checkout-php
        name: Checkout PHP repo
        env:
          GIT_REPO_PATH: '${{ env.GIT_USER_ID }}/${{ env.GIT_REPO_ID }}'
        uses: actions/checkout@v2
        with:
          path: ./generated/php
          ref: master
          repository: ${{ env.GIT_REPO_PATH }}
          token: ${{ secrets.FATTUREINCLOUD_BOT_TOKEN }}

      - id: init-git
        name: Init GIT
        run: |
          git config --global user.email "info@fattureincloud.it"
          git config --global user.name "fattureincloud-bot"

      - id: setup-node
        name: Setup Node.js
        uses: actions/setup-node@v2

      - id: setup-java
        name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '8'

      - id: setup-libraries
        name: Install libraries
        run: |
          npm install -g yarn
          yarn global add @apidevtools/swagger-cli @openapitools/openapi-generator-cli standard-version
          sudo add-apt-repository ppa:rmescandon/yq -y
          sudo apt update
          sudo apt install yq -y
          cd ./scripts/
          yarn
          cd ../generated/php/scripts
          yarn

      - id: bump-php-sdk-version
        name: Bump PHP SDK
        env:
          OPENAPI_VERSION: ${{ needs.bump-and-publish.outputs.version }}
        run: |

          echo "openapi_version=$OPENAPI_VERSION"

          BUMP_TYPE=$(node ./scripts/sdk-version-checker.js ./generated/php/sdk-version.yaml $OPENAPI_VERSION)

          cd ./generated/php

          if [ "$BUMP_TYPE" == "patch" ];then
            echo 'Bumping the SDK patch version...'
            standard-version --release-as patch
          elif [ "$BUMP_TYPE" == "openapi" ];then
            echo 'Using the openapi version...'
            standard-version --release-as $OPENAPI_VERSION
          else
            echo "Something bad happened - impossible to bump PHP SDK version. value=$BUMP_TYPE"
          fi

          SDK_VERSION=$(yq e '.info.version' ./sdk-version.yaml)


          echo "sdk_version=$SDK_VERSION" >> $GITHUB_ENV
          echo "openapi_version=$OPENAPI_VERSION" >> $GITHUB_ENV

      - id: generate-php-sdk
        name: Generate PHP SDK
        env:
          PACKAGE_NAME: "\"FattureInCloud PHP SDK\""
          INVOKER_PACKAGE: FattureInCloud
        run: |
          
          RELEASE_NOTE="\"${{ github.event.head_commit.message }}\""

          SDK_VERSION=${{ env.sdk_version }}
          echo "${{ env.sdk_version }}"

          USER_AGENT="$INVOKER_PACKAGE/${{ env.sdk_version }}/PHP-SDK"

          openapi-generator-cli generate -i ./openapi.yaml -g php -o ./generated/php/ -t ./templates/php --package-name=${PACKAGE_NAME} --invoker-package=${INVOKER_PACKAGE} --git-repo-id=${GIT_REPO_ID} --git-user-id=${GIT_USER_ID} --release-note=${RELEASE_NOTE} --http-user-agent=${USER_AGENT}

          node ./scripts/postprocess-php.js clean './generated/php/lib/' './generated/php/test/'
          node ./scripts/postprocess-php.js backport './generated/php/composer.json'
          node ./scripts/postprocess-php.js license MIT './generated/php/composer.json'

      - id: create-pr
        name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          path: ./generated/php
          branch: "devel-${{ env.sdk_version }}"
          token: "${{ secrets.FATTUREINCLOUD_BOT_TOKEN }}"
          delete-branch: true
          base: master
          commit-message: "${{ github.event.head_commit.message }}"
          title: "Updating SDK to ${{ env.sdk_version }}"
          body: "New SDK verson ${{ env.sdk_version }} generated by Github Action from OpenAPI Spec ${{ env.openapi_version }}"

  generate-js-sdk:
    runs-on: ubuntu-latest
    env:
      GIT_REPO_ID: fattureincloud-js-sdk
      GIT_USER_ID: fattureincloud
    needs: bump-and-publish
    steps: 

      - id: checkout
        name: Checkout repo
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.FATTUREINCLOUD_BOT_TOKEN }}
      
      - id: checkout-js
        name: Checkout JS repo
        env:
          GIT_REPO_PATH: '${{ env.GIT_USER_ID }}/${{ env.GIT_REPO_ID }}'
        uses: actions/checkout@v2
        with:
          path: ./generated/javascript
          ref: master
          repository: ${{ env.GIT_REPO_PATH }}
          token: ${{ secrets.FATTUREINCLOUD_BOT_TOKEN }}

      - id: init-git
        name: Init GIT
        run: |
          git config --global user.email "info@fattureincloud.it"
          git config --global user.name "fattureincloud-bot"

      - id: setup-node
        name: Setup Node.js
        uses: actions/setup-node@v2

      - id: setup-java
        name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '8'

      - id: setup-libraries
        name: Install libraries
        run: |
          npm install -g yarn
          yarn global add @apidevtools/swagger-cli @openapitools/openapi-generator-cli standard-version
          sudo add-apt-repository ppa:rmescandon/yq -y
          sudo apt update
          sudo apt install yq -y
          cd ./scripts/
          yarn
          cd ../generated/javascript/scripts
          yarn

      - id: bump-js-sdk-version
        name: Bump JS SDK
        env:
          OPENAPI_VERSION: ${{ needs.bump-and-publish.outputs.version }}
        run: |

          echo "openapi_version=$OPENAPI_VERSION"

          BUMP_TYPE=$(node ./scripts/sdk-version-checker.js ./generated/javascript/sdk-version.yaml $OPENAPI_VERSION)

          cd ./generated/javascript

          if [ "$BUMP_TYPE" == "patch" ];then
            echo 'Bumping the SDK patch version...'
            standard-version --release-as patch
          elif [ "$BUMP_TYPE" == "openapi" ];then
            echo 'Using the openapi version...'
            standard-version --release-as $OPENAPI_VERSION
          else
            echo "Something bad happened - impossible to bump JS SDK version. value=$BUMP_TYPE"
          fi

          SDK_VERSION=$(yq e '.info.version' ./sdk-version.yaml)


          echo "sdk_version=$SDK_VERSION" >> $GITHUB_ENV
          echo "openapi_version=$OPENAPI_VERSION" >> $GITHUB_ENV

      - id: generate-js-sdk
        name: Generate JS SDK
        env:
          PACKAGE_NAME: "\"FattureInCloud JavaScript SDK\""
          APP_NAME: FattureInCloudPROJECT_NAME="@fattureincloud/fattureincloud-js-sdk"
          MODULE_NAME: "fattureInCloudSdk"
          PROJECT_DESCRIPTION: "\"JavaScript SDK for the Fatture in Cloud API\""
        run: |
          
          RELEASE_NOTE="\"${{ github.event.head_commit.message }}\""

          SDK_VERSION=${{ env.sdk_version }}
          echo "${{ env.sdk_version }}"

          USER_AGENT="$APP_NAME/${{ env.sdk_version }}/JavaScript-SDK"

          openapi-generator-cli generate -i ./openapi.yaml -g javascript -o ./generated/javascript/ -t ./templates/javascript --git-repo-id=${GIT_REPO_ID} --git-user-id=${GIT_USER_ID} --release-note=${RELEASE_NOTE} --http-user-agent=${USER_AGENT} --additional-properties=projectName=$PROJECT_NAME,projectDescription=$PROJECT_DESCRIPTION,moduleName=$MODULE_NAME

          node ./scripts/postprocess-javascript.js nyc './generated/javascript/package.json'

      - id: create-pr
        name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          path: ./generated/javascript
          branch: "devel-${{ env.sdk_version }}"
          token: "${{ secrets.FATTUREINCLOUD_BOT_TOKEN }}"
          delete-branch: true
          base: master
          commit-message: "${{ github.event.head_commit.message }}"
          title: "Updating SDK to ${{ env.sdk_version }}"
          body: "New SDK verson ${{ env.sdk_version }} generated by Github Action from OpenAPI Spec ${{ env.openapi_version }}"   
